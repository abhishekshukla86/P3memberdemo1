{
	"name": "dataflow5",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Source_Plan_Code_excel",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "Source_Plan_benefits",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Sink_PlanCode",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "StringtoDate"
				}
			],
			"script": "source(output(\n\t\t{Plan_ID                             } as string,\n\t\tPlan_Start_Date as string,\n\t\tPlan_End_Date as string,\n\t\t{Plan_Name_Description            } as string,\n\t\t{Line_Of_Business                  } as integer,\n\t\t{Plan_Product_Code                 } as string,\n\t\t{market_Type                       } as string,\n\t\t{Grandfathered_Plan_Flag              } as string,\n\t\t{Metal_level                        } as integer,\n\t\t{Acturial_Value } as integer,\n\t\tIssuer_State as string,\n\t\tIssuer_ID as string,\n\t\tPlan_On_Off_Exchange_Indicator as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tinferDriftedColumnTypes: true) ~> source1\nsource(output(\n\t\tPlan_Benefit_ID as string,\n\t\tPlan_Benefit_Start_Date as string,\n\t\tPlan_Benefit_End_Date as string,\n\t\tPlan_Benefit_Description as string,\n\t\t{Line_Of_Business                  } as integer,\n\t\t{Plan_Product_Code                 } as string,\n\t\tBenefit_Plan_Type_Code as integer,\n\t\tPopulation_Category_Code as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source2\nsource1 derive(Plan_Start_Date = toDate(Plan_Start_Date),\n\t\tPlan_End_Date = toDate(Plan_End_Date)) ~> StringtoDate\nStringtoDate sink(input(\n\t\tPlan_ID as string,\n\t\tPlan_Start_Date as date,\n\t\tPlan_End_Date as date,\n\t\tPlan_Name_Description as string,\n\t\tLine_Of_Business as string,\n\t\tPlan_Product_Code as string,\n\t\tmarket_Type as string,\n\t\tGrandfathered_Plan_Flag as string,\n\t\tMetal_level as string,\n\t\tActurial_Value as string,\n\t\tIssuer_State as string,\n\t\tIssuer_ID as string,\n\t\tPlan_On_Off_Exchange_Indicator as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tPlan_ID = {Plan_ID                             },\n\t\tPlan_Start_Date,\n\t\tPlan_End_Date,\n\t\tPlan_Name_Description = {Plan_Name_Description            },\n\t\tLine_Of_Business = {Line_Of_Business                  },\n\t\tPlan_Product_Code = {Plan_Product_Code                 },\n\t\tmarket_Type = {market_Type                       },\n\t\tGrandfathered_Plan_Flag = {Grandfathered_Plan_Flag              },\n\t\tMetal_level = {Metal_level                        },\n\t\tActurial_Value = {Acturial_Value },\n\t\tIssuer_State,\n\t\tIssuer_ID,\n\t\tPlan_On_Off_Exchange_Indicator\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
		}
	}
}