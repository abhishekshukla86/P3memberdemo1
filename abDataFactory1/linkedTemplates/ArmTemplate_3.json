{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "abDataFactory1"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Contract_cat_code')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Code ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_Category_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_Category_Code_Desc",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Source_contractCatCode_excel",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow5')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Source_Plan_Code_excel",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Sink_PlanCode",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "StringtoDate"
						}
					],
					"script": "source(output(\n\t\t{Plan_ID                             } as string,\n\t\tPlan_Start_Date as string,\n\t\tPlan_End_Date as string,\n\t\t{Plan_Name_Description            } as string,\n\t\t{Line_Of_Business                  } as integer,\n\t\t{Plan_Product_Code                 } as string,\n\t\t{market_Type                       } as string,\n\t\t{Grandfathered_Plan_Flag              } as string,\n\t\t{Metal_level                        } as integer,\n\t\t{Acturial_Value } as integer,\n\t\tIssuer_State as string,\n\t\tIssuer_ID as string,\n\t\tPlan_On_Off_Exchange_Indicator as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tinferDriftedColumnTypes: true) ~> source1\nsource1 derive(Plan_Start_Date = toDate(Plan_Start_Date),\n\t\tPlan_End_Date = toDate(Plan_End_Date)) ~> StringtoDate\nStringtoDate sink(input(\n\t\tPlan_ID as string,\n\t\tPlan_Start_Date as date,\n\t\tPlan_End_Date as date,\n\t\tPlan_Name_Description as string,\n\t\tLine_Of_Business as string,\n\t\tPlan_Product_Code as string,\n\t\tmarket_Type as string,\n\t\tGrandfathered_Plan_Flag as string,\n\t\tMetal_level as string,\n\t\tActurial_Value as string,\n\t\tIssuer_State as string,\n\t\tIssuer_ID as string,\n\t\tPlan_On_Off_Exchange_Indicator as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tPlan_ID = {Plan_ID                             },\n\t\tPlan_Start_Date,\n\t\tPlan_End_Date,\n\t\tPlan_Name_Description = {Plan_Name_Description            },\n\t\tLine_Of_Business = {Line_Of_Business                  },\n\t\tPlan_Product_Code = {Plan_Product_Code                 },\n\t\tmarket_Type = {market_Type                       },\n\t\tGrandfathered_Plan_Flag = {Grandfathered_Plan_Flag              },\n\t\tMetal_level = {Metal_level                        },\n\t\tActurial_Value = {Acturial_Value },\n\t\tIssuer_State,\n\t\tIssuer_ID,\n\t\tPlan_On_Off_Exchange_Indicator\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow6')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Excel2",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable6",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tPlan_Benefit_ID as string,\n\t\tPlan_Benefit_Start_Date as string,\n\t\tPlan_Benefit_End_Date as string,\n\t\tPlan_Benefit_Description as string,\n\t\t{Line_Of_Business                  } as integer,\n\t\t{Plan_Product_Code                 } as string,\n\t\tBenefit_Plan_Type_Code as string,\n\t\tPopulation_Category_Code as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tinferDriftedColumnTypes: true) ~> source1\nsource1 derive(Plan_Benefit_Start_Date = toDate(Plan_Benefit_Start_Date),\n\t\tPlan_Benefit_End_Date = toDate(Plan_Benefit_End_Date),\n\t\tBenefit_Plan_Type_Code = lpad(Benefit_Plan_Type_Code, 2, \"0\"),\n\t\tPopulation_Category_Code = lpad(Population_Category_Code, 2, \"0\")) ~> DerivedColumn1\nDerivedColumn1 sink(input(\n\t\tPlan_Benefit_ID as string,\n\t\tPlan_Benefit_Start_Date as date,\n\t\tPlan_Benefit_End_Date as date,\n\t\tPlan_Benefit_Description as string,\n\t\tLine_Of_Business as string,\n\t\tPlan_Product_Code as string,\n\t\tBenefit_Plan_Type_Code as string,\n\t\tPopulation_Category_Code as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tPlan_Benefit_ID,\n\t\tPlan_Benefit_Start_Date,\n\t\tPlan_Benefit_End_Date,\n\t\tPlan_Benefit_Description,\n\t\tLine_Of_Business = {Line_Of_Business                  },\n\t\tPlan_Product_Code = {Plan_Product_Code                 },\n\t\tBenefit_Plan_Type_Code,\n\t\tPopulation_Category_Code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow7')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Excel3",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable8",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tEnrollment_Contract_ID as string,\n\t\tContract_Number as string,\n\t\tContract_Desc as string,\n\t\tContract_Category_Code as string,\n\t\tLine_Of_Business_Category_Code as string,\n\t\tLine_Of_Business_Sub_Category_Code as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 derive(Line_Of_Business_Category_Code = lpad(Line_Of_Business_Category_Code, 2, \"0\"),\n\t\tLine_Of_Business_Sub_Category_Code = lpad(Line_Of_Business_Sub_Category_Code, 2, \"0\")) ~> DerivedColumn1\nDerivedColumn1 sink(input(\n\t\tEnrollment_Contract_ID as integer,\n\t\tContract_Number as string,\n\t\tContract_Desc as string,\n\t\tContract_Category_Code as string,\n\t\tLine_Of_Business_Category_Code as string,\n\t\tLine_Of_Business_Sub_Category_Code as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tEnrollment_Contract_ID,\n\t\tContract_Number,\n\t\tContract_Desc,\n\t\tContract_Category_Code,\n\t\tLine_Of_Business_Category_Code,\n\t\tLine_Of_Business_Sub_Category_Code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow8')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText2",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable9",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\t{Enrollment_Benefit_Plan_ID } as string,\n\t\tEnrollment_Contract_ID as string,\n\t\tPlan_ID as string,\n\t\tPlan_Benefit_ID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 sink(input(\n\t\tEnrollment_Benefit_Plan_ID as integer,\n\t\tEnrollment_Contract_ID as integer,\n\t\tPlan_ID as string,\n\t\tPlan_Benefit_ID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tEnrollment_Benefit_Plan_ID = {Enrollment_Benefit_Plan_ID },\n\t\tEnrollment_Contract_ID,\n\t\tPlan_ID,\n\t\tPlan_Benefit_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow9')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText6",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable10",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tMEMBER_ID as string,\n\t\tFULL_NAME as string,\n\t\tFIRST_NAME as string,\n\t\tLAST_NAME as string,\n\t\tMIDDLE_NAME as string,\n\t\tSSN as string,\n\t\tDOB as string,\n\t\tGENDER as string,\n\t\tMEDICARE_ID as string,\n\t\tMEDICAID_ID as string,\n\t\tSUBSCRIBER_ID as string,\n\t\tMEMBERALTID1 as string,\n\t\tMEMBERALTID2 as string,\n\t\tMEMBERALTID3 as string,\n\t\tMEMBERALTID4 as string,\n\t\tMEMBERALTID5 as string,\n\t\tMEMBERALTID6 as string,\n\t\tRELATIONSHIP as string,\n\t\tADDRESS1 as string,\n\t\tADDRESS2 as string,\n\t\tCITY as string,\n\t\tSTATE as string,\n\t\tZIP as string,\n\t\tCOUNTY as string,\n\t\tMember_Contact_Pref as string,\n\t\tLocation_Usage_Type_Code as string,\n\t\tLocation_Usage_Preference_Code as string,\n\t\tHOME_PHONE as string,\n\t\tMOBILE_PHONE as string,\n\t\tPhone_Usage_Type_Code as string,\n\t\tPhone_Usage_Preference_Code as string,\n\t\tEMAIL_ADDRESS as string,\n\t\tEmail_Usage_Type_Code as string,\n\t\tEmail_Usage_Preference_Code as string,\n\t\tMARITAL_STATUS as string,\n\t\tRACE as string,\n\t\tETHNICITY as string,\n\t\tEthnicity_Type as string,\n\t\tRBI_ETHNICITY as string,\n\t\tDeceased_Date as string,\n\t\tRACEETHNICITYSOURCE as string,\n\t\tLANGUAGESPOKEN as string,\n\t\tLANGUAGEWRITTEN as string,\n\t\tLANGUAGEOTHER as string,\n\t\tLANGUAGESPOKENSOURCE as string,\n\t\tLANGUAGEWRITTENSOURCE as string,\n\t\tLANGUAGEOTHERSOURCE as string,\n\t\tLanguge_Usage_Type_Code as string,\n\t\tLanguge_Usage_Preference_Code as string,\n\t\tALTERNATE_PHONE1 as string,\n\t\tALTERNATE_PHONE2 as string,\n\t\tALTERNATE_PHONE3 as string,\n\t\tALTERNATE_PHONE4 as string,\n\t\tALTERNATE_PHONE5 as string,\n\t\tAUTHORIZED_REP_A as string,\n\t\tAUTHORIZED_REP_A_PHONE_1 as string,\n\t\tAUTHORIZED_REP_A_PHONE_2 as string,\n\t\tAUTHORIZED_REP_B as string,\n\t\tAUTHORIZED_REP_B_PHONE_1 as string,\n\t\tAUTHORIZED_REP_B_PHONE_2 as string,\n\t\tOREC as string,\n\t\tECDS_Flag as string,\n\t\tEnrollee_Unique_ID as string,\n\t\tQHP_State as string,\n\t\tCitizenship_Status_Code as string,\n\t\tCountry_Flips_Code as string,\n\t\tWhite_Indirect_Estimate as string,\n\t\tBlack_Indirect_Estimate as string,\n\t\tAsian_Indirect_Estimate as string,\n\t\tAme_rIndian_Indirect_Estimate as string,\n\t\tOther_Indirect_Estimate as string,\n\t\tHispanic_Indirect_Estimate as string,\n\t\tClient_ID_Number as string,\n\t\tCMS_PlanID as string,\n\t\tClient_Member_ID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tinferDriftedColumnTypes: true) ~> source1\nsource1 derive(FULL_NAME = (FIRST_NAME+\" \"+MIDDLE_NAME+\" \"+LAST_NAME),\n\t\tDOB = coalesce(toDate(DOB,'MM/dd/yyyy'),toDate(DOB,'dd-MM-yyyy'),toDate(DOB,'yyyy/MM/dd'),toDate(DOB,'dd/MM/yyyy'),toDate(DOB,'MMddyyyy'),toDate(DOB,'yyyyddMM'),toDate(DOB,'MMddyyyy'),toDate(DOB,'yyyyMMdd'))) ~> DerivedColumn1\nDerivedColumn1 sink(input(\n\t\tMember_ID as integer,\n\t\tFull_Name as string,\n\t\tFirst_Name as string,\n\t\tMiddle_Name as string,\n\t\tLast_Name as string,\n\t\tSSN as string,\n\t\tBirth_Date as date,\n\t\tGender_Code as string,\n\t\tMedicaid_ID as string,\n\t\tMedicare_ID as string,\n\t\tSubscriber_Key as string,\n\t\tMEMBERALTID1 as string,\n\t\tMEMBERALTID2 as string,\n\t\tMEMBERALTID3 as string,\n\t\tMEMBERALTID4 as string,\n\t\tMEMBERALTID5 as string,\n\t\tMEMBERALTID6 as string,\n\t\tRELATIONSHIP_CODE as string,\n\t\tAddress_Line_1 as string,\n\t\tAddress_Line_2 as string,\n\t\tCity as string,\n\t\tState_Code as string,\n\t\tZip as string,\n\t\tCounty as string,\n\t\tMember_Contact_Pref as string,\n\t\tLocation_Usage_Type_Code as string,\n\t\tLocation_Usage_Preference_Code as string,\n\t\tPhone_Number as string,\n\t\tPhone_Number_2 as string,\n\t\tPhone_Usage_Type_Code as string,\n\t\tPhone_Usage_Preference_Code as string,\n\t\tEmail_Address as string,\n\t\tEmail_Usage_Type_Code as string,\n\t\tEmail_Usage_Preference_Code as string,\n\t\tMarital_Status_Code as string,\n\t\tRace_Type as string,\n\t\tRace_Source as string,\n\t\tEthnicity_Code as string,\n\t\tEthnicity_Type as string,\n\t\tEthnicity_Source as string,\n\t\tDeceased_Date as date,\n\t\tLanguage_Spoken as string,\n\t\tLanguage_Written as string,\n\t\tLanguage_Other as string,\n\t\tLanguage_Spoken_Source as string,\n\t\tLanguage_Written_Source as string,\n\t\tLanguage_Other_Source as string,\n\t\tLanguage_Usage_Type_Code as string,\n\t\tLanguage_Usage_Preference_Code as string,\n\t\tALTERNATE_PHONE1 as string,\n\t\tALTERNATE_PHONE2 as string,\n\t\tALTERNATE_PHONE3 as string,\n\t\tALTERNATE_PHONE4 as string,\n\t\tALTERNATE_PHONE5 as string,\n\t\tAUTHORIZED_REP_A as string,\n\t\tAUTHORIZED_REP_A_PHONE_1 as string,\n\t\tAUTHORIZED_REP_A_PHONE_2 as string,\n\t\tAUTHORIZED_REP_B as string,\n\t\tAUTHORIZED_REP_B_PHONE_1 as string,\n\t\tAUTHORIZED_REP_B_PHONE_2 as string,\n\t\tOREC as string,\n\t\tECDS_Flag as string,\n\t\tEnrollee_Unique_ID as string,\n\t\tQHP_State as string,\n\t\tCitizenship_Status_Code as string,\n\t\tCounty_Fips_Code as string,\n\t\tWhite_Indirect_Estimate as string,\n\t\tBlack_Indirect_Estimate as string,\n\t\tAsian_Indirect_Estimate as string,\n\t\tAme_rIndian_Indirect_Estimate as string,\n\t\tOther_Indirect_Estimate as string,\n\t\tHispanic_Indirect_Estimate as string,\n\t\tClient_ID_Number as string,\n\t\tCMS_PlanID as string,\n\t\tClient_Member_ID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tMember_ID = MEMBER_ID,\n\t\tFull_Name = FULL_NAME,\n\t\tFirst_Name = FIRST_NAME,\n\t\tLast_Name = LAST_NAME,\n\t\tMiddle_Name = MIDDLE_NAME,\n\t\tSSN,\n\t\tBirth_Date = DOB,\n\t\tGender_Code = GENDER,\n\t\tMedicare_ID = MEDICARE_ID,\n\t\tMedicaid_ID = MEDICAID_ID,\n\t\tSubscriber_Key = SUBSCRIBER_ID,\n\t\tMEMBERALTID1,\n\t\tMEMBERALTID2,\n\t\tMEMBERALTID3,\n\t\tMEMBERALTID4,\n\t\tMEMBERALTID5,\n\t\tMEMBERALTID6,\n\t\tRELATIONSHIP_CODE = RELATIONSHIP,\n\t\tAddress_Line_1 = ADDRESS1,\n\t\tAddress_Line_2 = ADDRESS2,\n\t\tCity = CITY,\n\t\tState_Code = STATE,\n\t\tZip = ZIP,\n\t\tCounty = COUNTY,\n\t\tMember_Contact_Pref,\n\t\tLocation_Usage_Type_Code,\n\t\tLocation_Usage_Preference_Code,\n\t\tPhone_Number = HOME_PHONE,\n\t\tPhone_Number_2 = MOBILE_PHONE,\n\t\tPhone_Usage_Type_Code,\n\t\tPhone_Usage_Preference_Code,\n\t\tEmail_Address = EMAIL_ADDRESS,\n\t\tEmail_Usage_Type_Code,\n\t\tEmail_Usage_Preference_Code,\n\t\tMarital_Status_Code = MARITAL_STATUS,\n\t\tRace_Type = RACE,\n\t\tRace_Source = RACEETHNICITYSOURCE,\n\t\tEthnicity_Code = ETHNICITY,\n\t\tEthnicity_Type,\n\t\tEthnicity_Source = RBI_ETHNICITY,\n\t\tDeceased_Date,\n\t\tLanguage_Spoken = LANGUAGESPOKEN,\n\t\tLanguage_Written = LANGUAGEWRITTEN,\n\t\tLanguage_Other = LANGUAGEOTHER,\n\t\tLanguage_Spoken_Source = LANGUAGESPOKENSOURCE,\n\t\tLanguage_Written_Source = LANGUAGEWRITTENSOURCE,\n\t\tLanguage_Other_Source = LANGUAGEOTHERSOURCE,\n\t\tLanguage_Usage_Type_Code = Languge_Usage_Type_Code,\n\t\tLanguage_Usage_Preference_Code = Languge_Usage_Preference_Code,\n\t\tALTERNATE_PHONE1,\n\t\tALTERNATE_PHONE2,\n\t\tALTERNATE_PHONE3,\n\t\tALTERNATE_PHONE4,\n\t\tALTERNATE_PHONE5,\n\t\tAUTHORIZED_REP_A,\n\t\tAUTHORIZED_REP_A_PHONE_1,\n\t\tAUTHORIZED_REP_A_PHONE_2,\n\t\tAUTHORIZED_REP_B,\n\t\tAUTHORIZED_REP_B_PHONE_1,\n\t\tAUTHORIZED_REP_B_PHONE_2,\n\t\tOREC,\n\t\tECDS_Flag,\n\t\tEnrollee_Unique_ID,\n\t\tQHP_State,\n\t\tCitizenship_Status_Code,\n\t\tCounty_Fips_Code = Country_Flips_Code,\n\t\tWhite_Indirect_Estimate,\n\t\tBlack_Indirect_Estimate,\n\t\tAsian_Indirect_Estimate,\n\t\tAme_rIndian_Indirect_Estimate,\n\t\tOther_Indirect_Estimate,\n\t\tHispanic_Indirect_Estimate,\n\t\tClient_ID_Number,\n\t\tCMS_PlanID,\n\t\tClient_Member_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/REF_Data_surrkey')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow3",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ContractCatCode_DataFlow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ContractCatCode_flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow4",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Plan_and_plan_benefits')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow5",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Plan_benefits')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow6",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow6')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EnrollmentContracts')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow7",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow7')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/enrollment_benefit_plan')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow8",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow8')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadMember')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load_Members",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow9",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow9')]"
			]
		}
	]
}